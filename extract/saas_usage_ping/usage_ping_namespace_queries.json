[
  {
    "counter_name": "usage_activity_by_stage.manage.compliance_frameworks_with_pipeline",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(frameworks.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_compliance_management_frameworks_dedupe_source AS frameworks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = frameworks.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE frameworks.pipeline_configuration_full_path IS NOT NULL GROUP BY 1",
    "time_window_query": false,
    "level": "namespace"
  },
  {
    "counter_name": "usage_activity_by_stage_monthly.manage.compliance_frameworks_with_pipeline",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(frameworks.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_compliance_management_frameworks_dedupe_source AS frameworks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = frameworks.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE frameworks.pipeline_configuration_full_path IS NOT NULL AND frameworks.created_at BETWEEN between_start_date AND between_end_date GROUP BY 1",
    "time_window_query": true,
    "level": "namespace"
  },
  {
    "counter_name": "usage_activity_by_stage.manage.groups_with_event_streaming_destinations",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(DISTINCT namespaces.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source AS external_audits ON external_audits.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE namespaces.type = 'Group' GROUP BY 1",
    "time_window_query": false,
    "level": "namespace"
  },
  {
    "counter_name": "usage_activity_by_stage_monthly.manage.groups_with_event_streaming_destinations",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(DISTINCT namespaces.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source AS external_audits ON external_audits.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE namespaces.type = 'Group' AND namespaces.created_at BETWEEN between_start_date AND between_end_date GROUP BY 1",
    "time_window_query": true,
    "level": "namespace"
  },
  {
    "counter_name": "usage_activity_by_stage.manage.audit_event_destinations",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(external_audits.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source AS external_audits LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = external_audits.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id GROUP BY 1",
    "time_window_query": false,
    "level": "namespace"
  },
  {
    "counter_name": "usage_activity_by_stage_monthly.manage.audit_event_destinations",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(external_audits.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source AS external_audits LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = external_audits.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE external_audits.created_at BETWEEN between_start_date AND between_end_date GROUP BY 1",
    "time_window_query": true,
    "level": "namespace"
  },
  {
    "counter_name": "counts.projects_with_external_status_checks",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(DISTINCT status_checks.project_id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_external_status_checks_dedupe_source AS status_checks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = status_checks.project_id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id GROUP BY 1",
    "time_window_query": false,
    "level": "namespace"
  },
  {
    "counter_name": "counts.external_status_checks",
    "counter_query": "SELECT namespaces_xf.namespace_ultimate_parent_id AS id, namespaces_xf.namespace_ultimate_parent_id, COUNT(status_checks.id) AS counter_value FROM prep.gitlab_dotcom.gitlab_dotcom_external_status_checks_dedupe_source AS status_checks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = status_checks.project_id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id GROUP BY 1",
    "time_window_query": false,
    "level": "namespace"
  }
]
