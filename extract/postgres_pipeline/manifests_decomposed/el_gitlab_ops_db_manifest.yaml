connection_info:
  database: GITLAB_OPS_DB_NAME
  host: GITLAB_OPS_DB_HOST
  pass: GITLAB_OPS_DB_PASS
  port: PG_PORT
  user: GITLAB_OPS_DB_USER
tables:
  ci_pipelines:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'ci_pipelines'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , created_at
      , updated_at
      , ref
      , tag
      , yaml_errors
      , committed_at
      , project_id
      , status
      , started_at
      , finished_at
      , duration
      , user_id
      , lock_version
      , auto_canceled_by_id
      , pipeline_schedule_id
      , source
      , config_source
      , protected
      , failure_reason
      , iid
      , merge_request_id
      FROM ci_pipelines
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  ci_stages:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: ci_stages
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , project_id
      , pipeline_id
      , created_at
      , updated_at
      , name
      , status
      , lock_version
      , position
      FROM ci_stages
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  labels:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'labels'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , title
      , color
      , project_id
      , created_at
      , updated_at
      , template
      , type
      , group_id
      FROM labels
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  merge_request_metrics:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'merge_request_metrics'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , merge_request_id
      , latest_build_started_at
      , latest_build_finished_at
      , first_deployed_to_production_at
      , merged_at
      , created_at
      , updated_at
      FROM merge_request_metrics
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  merge_requests:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'merge_requests'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , iid
      , target_branch
      , source_branch
      , source_project_id
      , author_id
      , assignee_id
      , title
      , created_at
      , updated_at
      , milestone_id
      , state_id
      , merge_status
      , target_project_id
      , updated_by_id
      , merge_error
      , merge_params
      , merge_when_pipeline_succeeds
      , merge_user_id
      , approvals_before_merge
      , lock_version
      , time_estimate
      , squash
      , last_edited_at
      , last_edited_by_id
      , head_pipeline_id
      , discussion_locked
      , latest_merge_request_diff_id
      , allow_maintainer_to_push
      FROM merge_requests
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  projects:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'projects'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , name
      , path
      , description
      , created_at
      , updated_at
      , creator_id
      , namespace_id
      , last_activity_at
      , import_url
      , visibility_level
      , archived
      , avatar
      , merge_requests_template
      , star_count
      , merge_requests_rebase_enabled
      , import_type
      , import_source
      , approvals_before_merge
      , reset_approvals_on_push
      , merge_requests_ff_only_enabled
      , issues_template
      , mirror
      , mirror_user_id
      , shared_runners_enabled
      , NULL AS build_coverage_regex
      , build_allow_git_fetch
      , build_timeout
      , mirror_trigger_builds
      , pending_delete
      , public_builds
      , last_repository_check_failed
      , last_repository_check_at
      , NULL AS container_registry_enabled
      , only_allow_merge_if_pipeline_succeeds
      , has_external_issue_tracker
      , repository_storage
      , repository_read_only
      , request_access_enabled
      , has_external_wiki
      , ci_config_path
      , lfs_enabled
      , only_allow_merge_if_all_discussions_are_resolved
      , repository_size_limit
      , printing_merge_request_link_enabled
      , auto_cancel_pending_pipelines
      , service_desk_enabled
      , delete_error
      , last_repository_updated_at
      , disable_overriding_approvers_per_merge_request
      , storage_version
      , resolve_outdated_diff_discussions
      , remote_mirror_available_overridden
      , only_mirror_protected_branches
      , pull_mirror_available_overridden
      , mirror_overwrites_diverged_branches
      , external_authorization_classification_label
      FROM projects
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
  users:
    dbt_source_model: true
    export_schema: 'gitlab_ops_net'
    export_table: 'users'
    export_table_primary_key: id
    import_db: GITLAB_OPS_DB
    import_query: |-
      SELECT id
      , email
      , commit_email
      , remember_created_at
      , sign_in_count
      , current_sign_in_at
      , last_sign_in_at
      , current_sign_in_ip
      , last_sign_in_ip
      , created_at
      , updated_at
      , name
      , admin
      , projects_limit
      , failed_attempts
      , locked_at
      , can_create_group
      , can_create_team
      , state
      , color_scheme_id
      , password_expires_at
      , created_by_id
      , last_credential_check_at
      , avatar
      , confirmed_at
      , confirmation_sent_at
      , unconfirmed_email
      , hide_no_ssh_key
      , website_url
      , admin_email_unsubscribed_at
      , notification_email
      , hide_no_password
      , password_automatically_set
      , location
      , public_email
      , dashboard
      , project_view
      , consumed_timestep
      , layout
      , hide_project_limit
      , note
      , otp_grace_period_started_at
      , external
      , organization
      , auditor
      , require_two_factor_authentication_from_group
      , two_factor_grace_period
      , last_activity_on
      , notified_of_own_activity
      , preferred_language
      , email_opted_in
      , email_opted_in_source_id
      , email_opted_in_at
      , theme_id
      , accepted_term_id
      , private_profile
      , roadmap_layout
      , include_private_contributions
      , group_view
      , managing_group_id
      , "role"
      , username
      , first_name
      , last_name
      , user_type
      FROM users
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
