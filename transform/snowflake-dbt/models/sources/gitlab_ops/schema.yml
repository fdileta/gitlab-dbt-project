version: 2

models:
  - name: gitlab_ops_ci_builds_source
    description: Base model for ops.gitlab.net ci_builds
    columns:
      - name: ci_build_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
  - name: gitlab_ops_ci_pipelines_source
    description: Base model for ops.gitlab.net ci_pipelines
    columns:
      - name: ci_pipeline_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: updated_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
  
  - name: gitlab_ops_ci_stages_source
    description: Base model for ops.gitlab.net ci_stages
    columns:
      - name: ci_stage_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null

  - name: gitlab_ops_label_links_source
    description: 'Base model for ops.gitlab.net label links. {{ doc("scd_type_two_documentation") }}'
    columns:
      - name: label_link_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - dbt_utils.unique_where:
              where: "valid_to = NULL"
      - name: valid_from
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: valid_to
        tags: ["tdf","gitlab_ops"]
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= valid_from"        
  
  - name: gitlab_ops_labels_source
    description: >-
      Base model for ops.gitlab.net labels, the field `title` is hidden as contains
      PII.
    columns:
      - name: label_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique

  - name: gitlab_ops_members_source
    description: 'Base model for ops.gitlab.net members. {{ doc("scd_type_two_documentation") }}'
    columns:
      - name: member_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - dbt_utils.unique_where:
              where: "valid_to = NULL"
      - name: valid_from
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: valid_to
        tags: ["tdf","gitlab_ops"]
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= valid_from"

  - name: gitlab_ops_merge_requests_source
    description: >-
      Base model for ops.gitlab.net merge requests, column `merge_params` is hidden
      for privacy concerns.
    columns:
      - name: merge_request_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: updated_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: is_merge_to_master
        description: >-
          This fields queries if the target branch name is "master" and returns
          a boolean
      - name: merge_request_state
        description: >-
          The source table has both "state" and "state_id" columns. We use state_id to
          infer the "state" string as we found this gives results that match the API and UI.
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: merge_request_state_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4]

  - name: gitlab_ops_projects_source
    description: Base model for ops.gitlab.net projects
    columns:
      - name: project_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: updated_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: has_avatar
        description: >-
          This field will try to find an avatar file, if none is available will
          set this value as False, otherwise True.
      - name: visbility_level
        description: '{{ doc("visibility_documentation") }}'
      - name: project_description
        description: '{{ doc("visibility_documentation") }}'
      - name: project_import_source
        description: '{{ doc("visibility_documentation") }}'
      - name: project_issues_template
        description: '{{ doc("visibility_documentation") }}'
      - name: project_build_coverage_regex
        description: '{{ doc("visibility_documentation") }}'
      - name: project_name
        description: '{{ doc("visibility_documentation") }}'
      - name: project_path
        description: '{{ doc("visibility_documentation") }}'
      - name: project_import_url
        description: '{{ doc("visibility_documentation") }}'
      - name: project_merge_requests_template
        description: '{{ doc("visibility_documentation") }}'
      - name: project_description
        description: '{{ doc("visibility_documentation") }}'

  - name: gitlab_ops_users_source
    description: >-
      Base model for ops.gitlab.net users, the following fields are hidden for
      privacy `current_sign_in_ip`, `last_sign_in_ip`, `unconfirmed_email`,
      `website_url`, `notification_email`, `public_email`, `note`,
      `organization`
    columns:
      - name: user_id
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
          - unique
      - name: created_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: updated_at
        tags: ["tdf","gitlab_ops"]
        tests:
          - not_null
      - name: role
        description: This is the string translation of the "role" column stored as an integer in the source database. It is converted using the `user_role_mapping` macro.
      - name: role_id
        description: This is the integer representation of a user's role, as it's stored in the database.
        tags: ["tdf","gitlab_ops"]
        tests:
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 99]
